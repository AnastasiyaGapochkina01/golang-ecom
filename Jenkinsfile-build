pipeline {
    agent any

    parameters {
        booleanParam(name: 'RUN_DEPLOY', defaultValue: false, description: 'Run Deploy pipeline after build')
    }

    environment {
      REPO = 'anestesia01/filiz-docker-apps'
      DOCKER_TOKEN = credentials('docker_token')
      PRJ_NAME = 'ecommerce'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'git@github.com:AnastasiyaGapochkina01/golang-ecom.git'
            }
        }
        stage('Build Image') {
            steps {
                script {
                    sh """
                        docker build -t "${REPO}:${PRJ_NAME}-${BUILD_NUMBER}"
                }
            }
        }
        stage('Push Image') {
            steps {
                script {
                    sh """
                        docker push "${REPO}:${PRJ_NAME}-${BUILD_NUMBER}" .
                    """
                    }
                }
            }
        }
    }
    post {
        success {
            script {
                if (params.RUN_DEPLOY) {
                    echo "Run pipeline for deploy..."
                    build job: 'deploy-ecommerce', wait: false, parameters: [
                        string(name: 'TAG', value: "${REPO}:${PRJ_NAME}-${BUILD_NUMBER}")
                    ]
                }
            }
        }
        failure {
            echo "Build failed! Deploy will not start"
        }
    }
}
